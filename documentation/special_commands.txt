This file lists special commands that can be used in race/pose/item/filter files that aren't necessarily so obvious.
Commands that appear in both races and poses prioritize using the one in the pose if both are found unless otherwise mentioned.


--- Anywhere relevant to units

#trooptemplatechance <chance>
Chance for a troop to get at least one troop template. Defaults to 25%. 

#price_per_command <command> <price> [threshold]
Adds <price> of gcost to unit price per value of <command> if value is above [threshold] (optional, defaults to 0)
Example: #price_per_command #hp 1 10 -> +1 to gcost for each point of hp above 10.

#price_if_command <at and/or below and/or above> <command> <target> <price>
Adds price modifier <price> to gcost if <command> is at/below/above (no default) <target>. You can use combinations of at/below/above
Price modifier here should have "-", "+" or "*" in front of it as it is fed as a direct #gcosty <price> to units
and not having a modifier will just set unit price and mess things up.

#innate_sacred_power <power>
Basically reduces <power> from sacred/elite power. Can't go below 1/0.

--- Race
#deriveslots <slots>
Slots mages can try to downgrade based on higher tier mage equipment. Defaults to "weapon offhand helmet armor hair cloakb mount" without the parentheses.
This can also be in pose in which case it is prioritized.

#magepriestchance <chance>
Chance to get primary race mage priests. Default is 0.3. Works for nationthemes and races. Highest value found is used.

#highestpriestlevel <level>
Manually sets the level of highest priests in the nation. Works for nationthemes and races. Highest value found is used.

#priest_H1_upgradechance <chance>
#priest_H2_upgradechance <chance>
Chance that level of highest priests in the nation is 1 is [1 - priest_H1_upgradechance]. Chance that level of highest priests in the
nation is 2 is [priest_H1_upgradechance * (1 - priest_H2_upgradechance)]. Chance that level of highest priests in the nation is 3 is
[priest_H1_upgradechance * priest_H2_upgradechance].  Default for priest_H1_upgradechance is 0.75. Default for priest_H2_upgradechance
is 0.25. Works for nationthemes and races. Highest values found are used.

#priestextracost <cost>
Increases priest costs by <cost> per level of holy.

#pd_targetrcost <cost>
#pd_targetgcost <cost>
Sets the target, ie "ideal" pd and start army resource/gold cost with this. Default is mean gold/res cost of non-chariot
non-special troops the nation has.

#pd_targetrcostmulti <multi>
#pd_targetgcostmulti <multi>
Multiplies the target, ie "ideal" pd AND start army resource or gold cost with this. Having multiple entries in one or more places
stacks multiplicatively.

#pd_amountmulti <multi>
#startarmy_amountmulti <multi>
PD/start army amount multiplier. These stack like the above commands. 

#extrapdmulti <multi>
Multiplies the probability of a nation having more than 2 units of PD units. Default chance is 0.1 for a 3nd unit, and 0.05 for a 4th iff there was
already a 3rd unit. 

#troopdescriptions <file>
Uses this file (load files at /data/descriptions/descriptions.txt) for troop descriptions.

#all_troops_sacred / #all_troops_elite
All troop poses can be used to generate a sacred / elite unit. Without this only poses with role sacred or sacred infantry/mounted/chariot/ranged
will be considered.

#generationchance <role> <number> 
Changes the weight of certain role in troop roster generation. Defaults are 0.25, 1, 0.33, 0.125 for ranger, infantry, mounted and chariot
respectively

#magicpriority <path> <number>
Sets the weight of a certain magic path in mage generation. Default for all paths is 1. Works in poses as well. 

#sacred<role>chance <number>
Sets the weight of a certain role (either just the "role" or "sacred role", ie "infantry" or "sacred infantry") to given number. Defaults are 
0.125, 1, 0.25, 0.05 for ranger, infantry, mounted and chariot

#mapmovepenaltyenc <amount>
The amount of encumberance from equipment before getting mapmove penalty. Won't affect mounted units. Default is 4.

#mapmovepenaltyprot <amount>
The amount of prot from equipment (calculated with natural prot 0) before getting mapmove penalty. Won't affect mounted units. Default is 14.

#mapmovepenaltyamount <amount>
Amount of mapmove penalty when over encumberance. Default is 1.

#lowenctreshold <number>
#lowenccommand <command>
If encumberance from equipment is the number set in #lowenctreshold, command set in #lowenccommand will be added to the unit if the unit does not already have an instance of the command.

#secondaryracetroopmod <amount>
On primary race increases/decreases the roll range of likelihood of secondary race troops (Default is 0.5, which results in 0-0.5)

#primaryracetroopmod <amount>
On secondary race increases/decreases the roll range of likelihood of primary race troops (Default is, which results in 0-0.5)

#minsecaffinity <amount>
On primary race increases the minimum likelihood of secondary race troops (Default is 0.0)

#maxsecaffinity <amount>
On primary race increases the maximum likelihood of secondary race troops (Default is 1.0)

#nosecaffinitychance <amount>
Chance to reset likelihood of secondary race troops to 0 regardless of other rolls. Minimum likelihood switch above overrides this. (Default is 0.2)

#minsecondaryracetroops <amount>
On primary race sets the minimum amount of secondary race troops (Default is 0)

#minsecondaryracetroopshare <amount>
On primary race increases the minimum percentage of secondary race troops (Default is 0.0)

#maxprimaryracetroops <amount>
On primary race sets the maximum amount of primary race troops (Default is 100)

#maxthisracetroops_as_secondary <amount>
Maximum troop count of this race when the race is secondary(Default is 100)

#maxprimaryracetroopshare <amount>
On primary race decreases the maximum amount of primary race troops (Default is 1.0)

#secondaryracesacredmod <amount>
On primary race increases/decreases the likelihood of secondary race sacreds (Default is 1, as a multiplier of 0.05)

#primaryracesacredmod <amount>
On secondary race increases/decreases the likelihood of primary race sacreds (Default is 1, as a multiplier of 0.05)

#secondaryracemagemod <amount>
On primary race increases/decreases the likelihood of secondary race primary and secondary mages (Default is 1, as a multiplier of 0.075)

#primaryracemagemod <amount>
On secondary race increases/decreases the likelihood of primary race primary and secondary mages (Default is 1, as a multiplier of 0.075)

#secondaryracetertiarymagemod <amount>
On primary race increases/decreases the likelihood of secondary race tertiary mages (Default is 1, as a multiplier of 0.05)

#primaryracetertiarymagemod <amount>
On secondary race increases/decreases the likelihood of primary race tertiary mages (Default is 1, as a multiplier of 0.05)

#secondaryracecommand_conditional "<command>"
#secondaryracecommand "<command>"
Gives secondary race members this command when the nation has this race as the primary race. Conditional version does this only if the unit 
in question does not have a command defining the same attribute in pose or race commands. Used by at least Abysians

#oneprimarychance <number>
#twoprimarychance <number>
#threeprimarychance <number>
Sets the weights of primary mage amount options of this race (determined by the race primaries will be). Defaults are 0.625, 0.225 and 0.15 respectively.

#monsterchance <number>
Sets the probability of getting a cool monster. Default is 0.05.

#specialcommanderchance <number>
Sets the probability of getting a special commander (or troop). Default is 0.05.

#specialcommanderfilters <set>
Loads special commander filters from given definition set

#monsters <poses>
Sets the pose set to be used for monsters. Default is default_monsters

#racethemes <set>
Loads race themes from given definition set

#nationthemes <set>
Loads nation themes from given definition set

#startaffinities <set>
Loads start affinities from given definition set

#startaffinities <set>
Loads start affinities from given definition set

#nationwidefilters <set>
Loads nation wide filters from given definition set. This is stuff like "all units are myopic"

#startaffinities <set>
Loads start affinities from given definition set

#troopdescriptions <set>
Loads troop descriptions from given definition set

#magefilters <set>
Loads mage filters from given definition set

#priestfilters <set>
Loads priest filters from given definition set

#sacredfilters <set>
Loads sacred filters from given definition set

#elitefilters <set>
Loads elite filters from given definition set

#magicitems <set>
Loads magici tems (for sacreds etc) from given definition set

#epithet_era_names <set>
Loads epithet parts from given definition set

#pose <set>
Loads given pose set

#spritegenpose <set>
Loads given pose set, but only in SpriteGen; this is principly useful for being able to load poses in SpriteGen that are normally only granted by themes

#possiblecommandset <setname> <probability> 
Defines a new set of commands that is given to units with given probability. Works on most filters as well.

#possiblecommand <setname> <command>
Defines a command to a set of #possiblecommandset commands

--- Themes

#pd_targetrcost <cost>
#pd_targetgcost <cost>
Sets the target, ie "ideal" pd and start army resource/gold cost with this. Default is mean gold/res cost of non-chariot
non-special troops the nation has.

#pd_targetrcostmulti <multi>
#pd_targetgcostmulti <multi>
Multiplies the target, ie "ideal" pd AND start army resource or gold cost with this. Having multiple entries in one or more places
stacks multiplicatively.

#pd_amountmulti <multi>
#startarmy_amountmulti <multi>
PD/start army amount multiplier. These stack like the above commands. 

--- Pose

#deriveslots <slots>
Slots mages can try to downgrade based on higher tier mage equipment. Defaults to "weapon offhand helmet armor hair cloakb mount" without the parentheses.
This can also be in race in which case it is ignored if there is an entry in pose as well.

#non_mount_overlay
Normally overlay ignores the offsets mounts have. This makes them pretty

#mount_offset_slot <slot>
Normally mount offsets are used to move all other slots except overlay around instead of moving the mount around.
This is so that you can use practically normal infantry poses by simply changing the legs and setting suitable offsets.
With this command you can change whatever slot to do that, which is useful for centaurs for example.

#forcedname <name>
Forces the unit name to this. Works only for troops and sacredgenerator sacreds/elites.

#montagpose <pose> [basechance]
Sets pose named <pose> as a pose this pose might #firstshape into. Basechance option overwrites the original pose basechance for montag 
purposes only. This was set so that multiple poses do not have to be made for multiple 

#montagpose_min <number>
#montagpose_max <number>
Tells how many montag units to generate. Default for both is 10, which means always 10 units. Different minimum and maximum result in
random amount between the numbers.

#no_montag_mean_costs
Disables montag pose feature of calculating mean gold/res cost of montag units as cost

#maxunits <number>
Only this many copies of this pose may be generated. For normal troops it is across all instances of normal troops. For montag units 
as defined by #montagpose it is per pose defining montagposes - thus #maxunits 1 unit may appear multiple times, but not in the same
montag. It is not max unit amount per se, it is rather maximum armor varieties.

#maxtroops <number>
#mintroops <number>
Sets minimum and maximum for troops on a nation of this priamry race. The actual amount is a random number between minimum and maximum. 
Defaults to 6 and 10. Be careful with changing this too much: Nations with low diversity may have issues generating with too high numbers 
and too low numbers may cause strange things. Consider using #maxprimaryracetroops or #maxprimaryracetroopshare instead.


#cannot_be_pd
This unit cannot be used for start armies / province defence

#magefilters <set>
Loads mage filters from given definition set

#priestfilters <set>
Loads priest filters from given definition set

#sacredfilters <set>
Loads sacred filters from given definition set

#elitefilters <set>
Loads elite filters from given definition set

#magicitems <set>
Loads magici tems (for sacreds etc) from given definition set


#magicpriority <path> <number>
Sets the weight of a certain magic path in mage generation. Default for all paths is 1. Works in races as well.

#tier <number>
Sets the tiers the pose is available for in mage and priest generation. Tier 1 is for H1 priests and crappiest mages while tier 3 is for
the most powerful mages and H3 priests. Tier 2 is used for everything in between and extra mages.

#generateitem <probability> <slot> 
Generates an item to given slot at given probability. Current use is mostly to generate a guaranteed bonusweapon
to ranged units so they have something other than a fist for melee. This happens very early in the generation and thus items generated
to slots such as weapon may be replaced. Consider looking into either #forceslot or #additionalweaponslot.

#additionalweaponslot <probability> <slot>
As above, but with three differences:
1) This is done late, so it can replace weapons and such without issues
2) It works only for troops, ie troops, sacreds, elites and such
3) It treats variety like for weapons: If you have 3 units with the same exact armor, the item from this command will vary if possible and try 
   to primarily use items from other armor levels of the same pose if such exist.
For mages and priests consider playing around with #forceslot. It does pretty much the same thing when you don't need to vary equipment. 

#possiblecommandset <setname> <probability> 
Defines a new set of commands that is given to units with given probability. Works on most filters as well.

#possiblecommand <setname> <command>
Defines a command to a set of #possiblecommandset commands

#dwchancebonus <probability>
Increases the probability of dual wielding (when there are offhand weapons and a short 1h mainhand weapon). Base probability is a random number
ranging from 0 to 0.1 with a 20% chance of 0 and 80% chance of uniform distribution with parameters 0 and 0.1 (ie equal probability for all values)

#mapmovepenaltyenc <amount>
The amount of encumberance from equipment before getting mapmove penalty. Won't affect mounted units. Default is 4.

#mapmovepenaltyamount <amount>
Amount of mapmove penalty when over encumberance. Default is 1.

#magicpriority <path> <number>
Sets the weight of a certain magic path in mage generation. Default for all paths is 1.

#maxvarieties <number>
How many varieties of certain armor level of this pose can exist. Defaults to 3. Overridden by ability template and armor versions of this command.
#maxvarieties is the maximum number of weapon varieties per armor.

#writeslot <slot>
Writes weapon/armor of this slot to the unit. Should be for lanceslot in any cavalry pose.

#dontvaryhat
#dontvaryweapon
Mage variants of same tier won't vary hat/weapon

#varyslot <slot>
Mage variants vary one of the slots defined by the #varyslot command. Overrides the default hat/weapon varying.

#primaryraceonly
This pose will not be eligible for selection as a secondary race pose

#cannot_be_commander
This pose will not be eligible for selection as a commander if at all possible

#should_be_commander
This pose will be given priority for selection as a commander

#superior_leader
Commanders generated from this pose are more likely to be very good commanders

#good_leader
Commanders generated from this pose are more likely to be good commanders

--- Item
#recolormask <sprite filename/self>
Draws the given sprite or the sprite itself if argument is self on top of the item sprite with national color recolor.

#maxvarieties <number>
How many varieties of certain armor level of this pose can exist. . Only works on body armor. Overridden by ability template version of this command.

#addthemeinc <themeinc>
Essentially adds a theme filter with <themeinc> to the unit. The themeinc argument should be just like a command that starts with #themeinc, but without #themeinc.
For example: "#addthemeinc thisitemtag leather *10"

#needs <slot> <name>
When this item is added to a slot, the program tries to add item named <name> to <slot>.

#forceslot <slot> <name>
At the end of item generation, the program tries to add item named <name> to <slot>. May have adverse effects on generation on important slots (weapon, armor, mount etc)

#needstype <slot> <type>
When this item is added to a slot, the program tries to add a random item of #type <type> to <slot>.

#forceslottype <slot> <type>
At the end of item generation, the program tries to add a random item of #type <type> to <slot>. May have adverse effects on generation on important slots (weapon, armor, mount etc)


--- Ability templates

#maxvarieties <number>
How many varieties of certain armor level of this pose can exist. Defaults to 3.

--- Filters, magic items, names etc

#not_montag_inheritable
If a montag unit category pose gets this filter, the montag units will not inherit it

#type <string>
Units/nations/whatever can have only one filter of a type.

#primarycommand <command>
When checking if we're trying to add something that won't change the unit, we only consider commands marked with #primarycommand. For example a filter giving #ethereal and #gcost +15 will trigger on an ethereal unit thanks to the gold cost changing the unit. However, if you set #primarycommand #ethereal, only #ethereal will be considered and thus an ethereal unit won't get the filter in question.

#commanderonly
#trooponly
Only works for nation wide filters. Applies the filter only to commanders or only to troops.

#alwaysok
Only for mage names. Always accepts this name part even if it does not match the required magic.

#possiblecommandset <setname> <probability> 
Defines a new set of commands that is given to units with given probability. Works on most filters as well.

#possiblecommand <setname> <command>
Defines a command to a set of #possiblecommandset commands

#cannot_be_pd
This unit cannot be used for start armies / province defence

--- Magic patterns
#costpremium <price>
Increases the cost of the mage with this pattern by given price.

-- Names
#racevariant <internal race name> <name>
Uses this name instead for given race. Use internal race names, ie "Austral human" for Machakans and so on.

#posetagvariant <tag> <name> 
#racetagvariant <tag> <name>
Uses this name instead if race/pose has given tag.

#commandvariant <command> [positive/negative] <name>
Uses this name instead if unit has given command. Positive/negative can be used to require a negative or a positive value for the command (such as #fireres)

-- Troop naming
#neverredundant 
If this is on a troop name, it will not be removed (it may be replaced though). Meaningful only on prefix / prefixprefix for files that 
are run in differentiation naming mode: weaponname and miscitemprefixes.

#type <type>
No two name parts of same type should appear


